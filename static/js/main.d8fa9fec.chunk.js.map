{"version":3,"sources":["pages/fate_react/Header.js","pages/fate_react/Home.js","pages/fate_react/Doc.js","pages/fate_react/router.config.js","pages/fate_react/Tuto.js","pages/fate_react/Blog.js","pages/fate_react/Comm.js","pages/fate_react/login.js","pages/fate_react/App.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","console","log","style","textAlign","onClick","history","push","withRouter","routes","path","component","className","from","map","route","i","RouteWithSubRoutes","key","pri","login","localStorage","setItem","replace","location","state","PrivateRoute","Com","rest","render","getItem","pathname","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d8fa9fec.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './header.css'\n\nconst Header = () => {\n    return (\n        <header>\n            <nav>\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\n                <NavLink activeClassName='active' to='/tuto'>教程</NavLink>\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\n                <NavLink activeClassName='active' to='/comm'>社区</NavLink>\n            </nav>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Home = (props) => {\n    console.log(props);\n    return (\n        <div style={{textAlign:'center'}}>\n            <h2>React</h2>\n            <p>用于构建用户界面的JavaScript库</p>\n            <div>\n                <button onClick={()=>props.history.push('/doc')}>快速开始</button>\n                <button onClick={()=>props.history.push('/tuto')}>入门教程</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React,{useEffect} from 'react'\n// import {NavLink, Redirect, Route,useHistory,useLocation,useParams,useRouteMatch,withRouter,Switch} from 'react-router-dom'\nimport {Redirect, Route,withRouter,Switch, NavLink} from 'react-router-dom'\nimport './doc.css'\nimport {RouteWithSubRoutes}from './App'\nimport Header from './Header'\n\nconst DocContent = (props)=>{\n\n    console.log(props.match.params.type)\n    return props.match.params.type;\n    // return <div>\n    //     {props.match.params.type}\n    // </div>\n    // return <props.match.params.type />\n}\n\n\n\nconst Doc = (props) => {\n    // const history = useHistory();\n    // const location = useLocation();\n    // const params = useParams();\n    // const match = useRouteMatch();\n    // console.log(history);\n    // console.log(location);\n    // console.log(params);\n    // console.log(match);\n    \n    // useEffect(()=>{\n    //     if(!localStorage.getItem('userinfo')){\n    //         props.history.push({\n    //             pathname:'/login',\n    //             state:props.location\n    //         })\n    //     }\n    // },[])\n\n    console.log(props);\n    return (\n        <div className='doc'>\n            <div className=\"content\">\n                 {/* 嵌套路由 */}\n                 {/* <Route path='/doc/:type' component={DocContent}/> */}\n                    <Redirect from='/doc' to='/doc/core'/>{/* 重定向 */}\n                <Switch>\n                    {props.routes.map((route,i) => (\n                        <RouteWithSubRoutes key={i} {...route} />\n                    ))}\n                </Switch>\n            </div>\n            <ol>\n                <li><NavLink to='/doc/core'>核心概念</NavLink></li>\n                <li><NavLink to='/doc/guide'>高级指引</NavLink></li>\n                <li><NavLink to='/doc/api'>API</NavLink></li>\n                <li><NavLink to='/doc/hooks'>Hooks</NavLink></li>\n                {/* <li><NavLink exact to={core}>核心概念</NavLink></li>\n                <li><NavLink to={guide}>高级指引</NavLink></li>\n                <li><NavLink to={api}>API</NavLink></li>\n                <li><NavLink to={hooks}>Hooks</NavLink></li> */}\n            </ol>\n        </div>\n\n        // <div className='doc'>\n        //     <div className='content'>\n        //         {/* 嵌套路由 */}\n        //         {/* <Route path='/doc/:type' component={DocContent}/> */}\n        //         <Route path='/doc/core' component={core}/>\n        //         <Route path='/doc/guide' component={guide}/>\n        //         <Route path='/doc/api' component={api}/>\n        //         <Route path='/doc/hooks' component={hooks}/>\n        //         <Redirect from='/doc' to='/doc/core'/>{/* 重定向 */}\n        //     </div>\n        //     <Switch>\n        //         {props.routes.map((route,i) => (\n        //             <RouteWithSubRoutes key={i} {...route} />\n        //             // <li ><NavLink to = {route.path}/></li>\n        //         ))}\n        //     </Switch>\n        // </div>\n    )\n}\nfunction Core(){\n    return <div>\n        Core\n        {/* <ol>\n            <li><NavLink to='/home'>add</NavLink></li>\n        </ol> */}\n    </div>\n}\nfunction Guide(){\n    return <div>\n        Guide\n    </div>\n}\nfunction Api(){\n    return <div>\n        Api\n    </div>\n}\nfunction Hooks(){\n    return <div>\n        Hooks\n    </div>\n}\nexport default withRouter(Doc)\nexport {Core,Guide,Api,Hooks}\n","import Header from './Header';\r\nimport Home from './Home';\r\nimport Doc,{Core,Guide,Api,Hooks} from './Doc';\r\nimport Tuto from './Tuto';\r\nimport Blog from './Blog';\r\nimport Comm from './Comm';\r\nimport Login from './login';\r\n\r\nconst routes = [\r\n\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        component:Home\r\n    },\r\n    {\r\n        path:'/doc',\r\n        component:Doc,\r\n        pri:true,\r\n        routes:[\r\n            {\r\n                path:'/doc/core',\r\n                component:Core,\r\n                // routes:[\r\n                //     {\r\n                //         path:'/doc/core/add',\r\n                //         component:Home\r\n                //     }\r\n                // ]\r\n            },\r\n            {\r\n                path:'/doc/guide',\r\n                component:Guide,\r\n                // pri:true\r\n            },\r\n            {\r\n                path:'/doc/api',\r\n                component:Api\r\n            },\r\n            {\r\n                path:'/doc/hooks',\r\n                component:Hooks\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path:'/tuto',\r\n        component:Tuto,\r\n        pri:true,\r\n    },\r\n    {\r\n        path:'/blog',\r\n        component:Blog\r\n    },\r\n    {\r\n        path:'/comm',\r\n        component:Comm\r\n    },\r\n    {\r\n        path:'/login',\r\n        component:Login\r\n    },\r\n]\r\n\r\nexport default routes;","import React from 'react'\n\nconst Tuto = () => {\n    return (\n        <div>\n            Tuto\n        </div>\n    )\n}\n\nexport default Tuto\n","import React from 'react'\n\nconst Blog = () => {\n    return (\n        <div>\n            Blog\n        </div>\n    )\n}\n\nexport default Blog\n","import React from 'react'\n\nconst Comm = () => {\n    return (\n        <div>\n            Comm\n        </div>\n    )\n}\n\nexport default Comm\n","import React from 'react'\r\nconst login = (props) => {\r\n    const login=()=>{\r\n        localStorage.setItem('userinfo','Tom')\r\n        // props.history.push('/')\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default login\r\n","import React from 'react';\nimport {BrowserRouter as Router,Redirect,Route,NavLink,Switch} from 'react-router-dom'\nimport Header from './Header';\nimport Home from './Home';\nimport Doc from './Doc';\nimport Tuto from './Tuto';\nimport Blog from './Blog';\nimport Comm from './Comm';\nimport login from './login';\nimport routes from './router.config';\n\n\n/*\n路由基本配置\n路由传参（以及获取参数props\n动态路由（:/page\njs跳转\n权限路由\n*/ \n\n\n// 权限验证\nfunction PrivateRoute({component:Com,...rest}){\n\tconsole.log(!!{...rest}.routes);\n\treturn(\n\t\t<Route\n\t\t{...rest}\n\t\trender={({ location }) =>\n\t\tlocalStorage.getItem('userinfo') \n\t\t? \n\t\t// <RouteWithSubRoutes {...rest}/>\n\t\t<Com routes={{...rest}.routes}/>\n\t\t// 登录\n\t\t: (<Redirect to={{\n\t\t\tpathname: \"/login\",\n\t\t\tstate:location,\n\t\t\troutes:{...rest}.routes\n\t\t}} \n\t\t/>\n        )\n\t} \n    />\n\t)\n}\n// function RouteWithSubRoutes(route) {\n// \treturn (\n// \t  <Route\n// \t\tpath={route.path}\n// \t\trender={props => (\n// \t\t  <route.component {...props} routes={route.routes} />\n// \t\t)}\n// \t  />\n// \t);\n//   }\nfunction RouteWithSubRoutes(route) {\n\t// console.log(route.pri);\n\tif(!route.pri){\n\t\treturn (\n\t\t\t<Route\n\t\t\t\tpath={route.path}\n\t\t\t\trender={props => (\n\t\t\t\t\t<route.component {...props} routes={route.routes}/>\n\t\t\t\t)}\n\t\t\t/>\n\t    ); \n\t}else{\n\t\treturn <PrivateRoute {...route}/>;\n\t}\n}\n\nconst App = ()=>{\n\tconsole.log(routes);\n\treturn <Router>\n\t\t<Header/>\n\t\t <Switch>\n\t\t\t{\n\t\t\t\t// routes.map(route=>{\n\t\t\t\t// \tif(route.pri){\n\t\t\t\troutes.map(({pri,...rest})=>{\n\t\t\t\t\tif({...rest}.routes){\n\t\t\t\t\t\tif(!pri){\n\t\t\t\t\t\t\treturn <RouteWithSubRoutes {...rest}/>\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\treturn <PrivateRoute {...rest}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(pri){\n\t\t\t\t\t\t\tconsole.log({...rest});\n\t\t\t\t\t\t\t// return <PrivateRoute {...route}/>\n\t\t\t\t\t\t\treturn <PrivateRoute {...rest}/>\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t// return <Route {...route}/>\n\t\t\t\t\t\t\treturn <Route {...rest}/>\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// <Route exact = {route.exact} path = {route.path} component = {route.component}/>\n\t\t\t\t})\n\t\t\t}\n\t\t</Switch>\n\n\t\t\t{/* home组件这种配置方式会在Home组件的props内注入四个属性 /*}\n\t\t\t{/* { <Route exact path='/' component={Home} /> /*}\n\t\t\t {/* <PrivateRoute path='/doc' component={Doc} />\n\t\t\t <PrivateRoute path='/tuto' component={Tuto}/>\n\t\t\t <PrivateRoute path='/blog' component={Blog}/>\n\t\t\t</Switch>/ <Route path='/comm' component={Comm}/>\n\t\t \t<Route path='/login' component={login}/>\n\t\t\tno-match\n\t\t\t <Route component={()=>{<div>404</div>}}/> \n\t\t\t</Router> <Route path='*' component={()=><div>404</div>}/>  \n\t\t</Switch>\n\t\t  */}\n\t</Router>\n\t\n}\n\nexport default App;\nexport {RouteWithSubRoutes};\n","// import App from './pages/taobao/App';\nimport App from './pages/fate_react/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd-mobile/dist/antd-mobile.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <Control />,\n//   document.getElementById('root')\n// );\n\n\n// ReactDOM.render(\n//   <Context.Provider value='133'> \n//     {/* <Hook /> */}\n//     <App/>\n//   </Context.Provider>,\n//   document.getElementById('root')\n// );\n\n\n\n// let ele = React.createElement(\n//   'h1',\n//   {id:'title'},\n//   React.createElement('div',{},'hello'),\n//   'react'\n//   );\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n\n\n\n// let ele = <h1 id = \"title\" className = 'tit'>\n//   <div>hello</div>\n//   react\n// </h1>;\n\n\n// setInterval(() => {\n//   let ele = <h1 id='time' className='ti'>\n//   <div>当前时间</div>\n//   {new Date().toLocaleString()}\n//   </h1>\n//   ReactDOM.render(\n//     ele,\n//     document.getElementById('root')\n//   )\n// }, 1000);\n\n\n\n//函数组件   UI（展示）组件，木偶组件         \n// function App(props){\n//   return <div>\n//     <div>{props.title}</div>\n//     <div>world</div>\n//   </div>\n// }\n// ReactDOM.render(\n//   <App title=\"任意值\"/>,\n//   document.getElementById('root')\n// );\n// 除此，还有智能组件\n// class Demo extends React.Component{\n//     constructor(){\n//       super();\n//       this.state={\n//       name:'Tom'\n//     };\n//     setTimeout(()=>{\n//       this.setState({name:'Jerry'})\n//     },3000)\n//   }   \n//   render(){\n//     return <div>\n//       <div>name:{this.state.name}</div>\n//       <App title={this.state.name}/>\n//     </div>\n//   }\n// }\n// ReactDOM.render(\n//   <Demo title=\"任意值\"/>,\n//   document.getElementById('root')\n// );\n\n//无react-dom如何实现\n/*let ReactDOM = {\n  render(eleObj,container){\n    //解构\n    const {type,props} = eleObj;\n    //创建第一层节点\n    let ele = document.createElement(type);\n    //遍历属性对象，降属性添加到第一层节点对象上\n    for(const prop in props){\n      if(prop == 'children'){\n        if(typeof props.children == 'string'){\n          const txtNode = document.createTextNode(props.children);\n          ele.appendChild(txtNode);\n          continue;\n        }\n        //将第一层节点对象的子元素添加进去\n        props.children.forEach((child)=>{\n          if(typeof child == 'string'){\n            const txtNode = document.createTextNode(child);\n            ele.appendChild(txtNode);\n          }else{\n            ReactDOM.render(child,ele);\n          }\n        })\n      }else{\n        // ele.setAttribute('class',props[prop]);\n        ele[prop] = props[prop];\n      }\n    }\n    //将第一层DOM添加进\n    container.appendChild(ele);\n  }\n}*/\n// ReactDOM.render(\n//   ele,\n//   document.getElementById('root')\n// );\n\n\n\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state={\n//       data:[1,2,3]\n//     }\n//     setTimeout(()=>{\n//       this.setState({data:[4,5,6]})\n//     },2000)\n//   }\n//   render(){\n//     return <ul>\n//       {\n//         this.state.data.map(\n//           (item)=><li key={item.id}>{item}</li>\n//           )\n//       }\n//     </ul>\n//   }\n// }\n// ReactDOM.render(\n//   <Home title=\"任意值\"/>,\n//   document.getElementById('root')\n// );\n\n\n\n/*const List = (props)=>{\n  \n  return <ul>\n    {\n    props.data.map(\n      (item) => <li>{item.title}</li>\n      )\n    }\n  </ul>\n}\n\n\n\nconst Button = ()=>{\n  const btns = [1,2,3,4,5];\n  const handleClick = (num)=>{\n    //事件对象\n    console.log(num);\n  }\n  \n  return <div>\n    {\n      btns.map(\n        (item)=>(\n        <button key={item} onClick={()=>handleClick(item)}>\n          {item}\n        </button>)\n      )\n    }\n    { <List data={data}/> }\n  </div>\n  \n}\n\n\n*/\n// class Home extends React.Component{\n//   constructor(){\n//     super();\n//     this.state={\n//       data:[]\n//     }\n//   }\n  // componentDidMount(){\n  //   fetch('https://cnodejs.org/api/v1/topics')\n  //   .then(res=>res.json())\n  //   .then(({data})=>{//data解构\n  //     console.log(data);\n  //     this.setState({data});\n  //   })\n  // }\n  \n  \n  // handleClick=()=>{\n  //   console.log(this);\n  // }\n\n//   render(){\n//     const {data} = this.state;//data 代替this.state\n//     return <ul>\n//       {\n//         <button onClick={()=>{console.log('1')}}>click</button>,\n//         this.state.data.map(\n//           (item)=><li key = {item.id}>{item.title}</li>\n//           )\n//       }\n//     </ul>\n//   }\n// }\n// ReactDOM.render(\n//   <Home title=\"任意值\"/>,\n//   document.getElementById('root')\n// );\n\n\n\n\n\n\n\n\n\n\n\n\n"],"sourceRoot":""}